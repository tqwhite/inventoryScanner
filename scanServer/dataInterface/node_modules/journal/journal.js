'use strict';
var qtools = require('qtools'),
	qtools = new qtools(module),
	events = require('events'),
	util = require('util');

//START OF moduleFunction() ============================================================

var moduleFunction = function(args) {
	events.EventEmitter.call(this);
	this.forceEvent = forceEvent;
	this.args = args;
	this.metaData = {};
	this.addMeta = function(name, data) {
		this.metaData[name] = data;
	}

	// 	qtools.validateProperties({
	// 		subject: args || {},
	// 		targetScope: this, //will add listed items to targetScope
	// 		propList: [
	// 			{
	// 				name: 'placeholder',
	// 				optional: true
	// 			}
	// 		]
	// 	});

	var self = this,
		forceEvent = function(eventName, outData) {
			this.emit(eventName, {
				eventName: eventName,
				data: outData
			});
		};


	//LOCAL FUNCTIONS ====================================

	var checkWriteable = function() {
		var testFileName = qtools.newId(),
			testFilePath = self.journalDir + '/' + testFileName;

		qtools.writeSureFile(testFilePath, 'hello');
		
		if (!qtools.fs.existsSync(testFilePath)) {
			throw "FATAL ERROR: Cannot create files. Directory must be writable: " + self.journalDir;
		} else {
			qtools.fs.unlinkSync(testFilePath);
		}
	}


	//METHODS AND PROPERTIES ====================================
	
	this.add=function(inData, status, template){
		var fileData=template?qtools.templateReplace(template, inData):JSON.stringify(inData);
		var filePath=todayDirectoryPath+'/journal_'+status+'.txt';
		qtools.writeSureFile(filePath, fileData+'\n', {
			append:true
		});
	}


	//INITIALIZATION ====================================

	var loggingBasePath = process.env.SCANNER_LOG_FILE_DIRECTORY_PATH;


	if (!loggingBasePath) {
		qtools.die("there must be an environment variable named SCANNER_LOG_FILE_DIRECTORY_PATH pointing to a folder for journal and log files");
	}

	this.journalDir = loggingBasePath + '/scanJournalFiles';
	
	


	checkWriteable();
	var todayDirectoryPath=this.journalDir+'/'+qtools.getDateString('dd_MMM_yyyy');

	return this;
};

//END OF moduleFunction() ============================================================

util.inherits(moduleFunction, events.EventEmitter);
module.exports = moduleFunction;







